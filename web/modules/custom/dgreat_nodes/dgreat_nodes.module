<?php

/**
 * @file
 * Contains dgreat_nodes.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;


/**
 * Implements hook_help().
 */
function dgreat_nodes_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the dgreat_nodes module.
    case 'help.page.dgreat_nodes':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Custom functions related to nodes on the site.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 */
function dgreat_nodes_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $fav_links_nodes = [
    'node_favorite_link_form',
    'node_favorite_link_edit_form'
  ];


  if (in_array($form_id, $fav_links_nodes)) {

    $query =  \Drupal::request()->query->get('edit');
    if (isset($query['field_link_type']['und'])) {
      $form['field_link_type']['widget']['#default_value'] = $query['field_link_type']['und'];
    }

    $user = \Drupal::currentUser()->getRoles();
    if (!in_array('administrator', $user)) {
      unset($form['field_link_type']['widget']['#options']['favorite']);
      $form['field_top_quick_link']['#access'] = FALSE;
      $form['field_group_audience']['#access'] = FALSE;
    }
    // custom submit handler
    $form['actions']['submit']['#submit'][] = 'dgreat_nodes_node_form_submit';
  }

}

/**
 * Custom submit handler.
 */
function dgreat_nodes_node_form_submit($form, FormStateInterface $form_state) {
  $node = $form_state->getFormObject()->getEntity();

  $link = $node->get('field_link_type')->getValue();

  // If on quick links add the new node to the db.
  if (isset($link[0]["value"]) && $link[0]["value"] === 'quick') {
    $uid = \Drupal::currentUser()->id();

    $db = \Drupal::database();
    $check = $db
      ->select('user_weights', 'u')
      ->fields('u', ['entity_id'])
      ->condition('uid', $uid)
      ->condition('entity_id', $node->id())
      ->condition('view_name', 'quick_links')
      ->execute()
      ->fetchField();

    // Grab the new weight.
    $sql = "SELECT MAX(weight) FROM {user_weights} WHERE uid = :uid";
    $weight = $db
      ->query($sql, [':uid' => $uid])->fetchField();

    if ($check === FALSE) {
      // Insert new item in weights table.
      $db->insert('user_weights')
        ->fields([
          'entity_id' => $node->id(),
          'uid' => $uid,
          'view_name' => 'quick_links',
          'weight' => $weight + 1,
        ])
        ->execute();
    }
    else {
      // Update the weights table.
      $db->update('user_weights')
        ->condition('uid', $uid)
        ->condition('entity_id', $node->id())
        ->condition('view_name', 'quick_links')
        ->fields([
          'entity_id' => $node->id(),
          'uid' => $uid,
          'view_name' => 'quick_links',
          'weight' => $weight + 1,
        ])
        ->execute();
    }
  }
}