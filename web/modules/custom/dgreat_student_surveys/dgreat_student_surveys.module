<?php

/**
 * @file
 * Contains dgreat_student_surveys.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\webform\WebformSubmissionInterface;

/**
 * Implements hook_help().
 */
function dgreat_student_surveys_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the dgreat_student_surveys module.
    case 'help.page.dgreat_student_surveys':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Handles custom requirements for student survey webforms') . '</p>';
      break;

    default:
      $output = '';
  }

  return $output;
}

/**
 * Implements hook_webform_third_party_settings_form_alter().
 */
function dgreat_student_surveys_webform_third_party_settings_form_alter(
  array &$form,
  FormStateInterface $form_state
) {
  /** @var \Drupal\webform\WebformThirdPartySettingsManagerInterface $third_party_settings_manager */
  $third_party_settings_manager = \Drupal::service('webform.third_party_settings_manager');

  /** @var \Drupal\webform\WebformInterface $webform */
  $webform = $form_state->getFormObject()->getEntity();

  $student_surveys = $webform->getThirdPartySetting('dgreat_student_surveys',
    'salesforce_id');

  $form['third_party_settings']['dgreat_student_surveys'] = [
    '#type' => 'details',
    '#title' => t('Student Surveys'),
    '#open' => TRUE,
    '#description' => t('Configure Student Survey settings')
  ];

  $form['third_party_settings']['dgreat_student_surveys']['salesforce_id'] = [
    '#type' => 'textfield',
    '#title' => t('The campaign id for this survey in Salesforce'),
    '#default_value' => $student_surveys,
    '#return_value' => TRUE,
  ];
  return $form;
}

/**
 * Implements hook_ENTITY_TYPE_prepare_form().
 */
function dgreat_student_surveys_webform_submission_prepare_form(WebformSubmissionInterface $entity, $operation, FormStateInterface $form_state) {
  $webform = $entity->getWebform();
  // Get all of the survey questions.
  $elements = collect($webform->getElementsDecoded())->filter(function ($element, $key) {
    return mb_strpos($key, '#') !== 0;
  })->all();
  // Randomly choose one.
  $keep = array_rand($elements);
  // Filter out all questions that aren't the chosen one.
  $filtered_elements = collect($webform->getElementsDecoded())->filter(function ($element, $key) use ($keep) {
    return $key === $keep || mb_strpos($key, '#') === 0;
  })->all();
  // Set the form to the above results.
  $webform->setElements($filtered_elements);
}
