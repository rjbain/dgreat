<?php

/**
 * @file
 */

/**
 *
 */
function myusf_preprocess(&$variables) {
  isset($_GET["search_content"]) ? $search_content = $_GET["search_content"] : $search_content = "";
  isset($_GET["event_category"]) ? $event_category = $_GET["event_category"] : $event_category = "";
  isset($_GET["event_date"]) ? $event_date = $_GET["event_date"] : $event_date = "";
  isset($_GET["event_target"]) ? $event_target = $_GET["event_target"] : $event_target = "";
  isset($_GET["action"]) ? $action = $_GET["action"] : $action = "";
  isset($_GET["usfca_search"]) ? $usfca_search = $_GET["usfca_search"] : $usfca_search = "";
  isset($_GET["myusf_search"]) ? $myusf_search = $_GET["myusf_search"] : $myusf_search = "";

  $variables['search_content'] = htmlentities($search_content, ENT_QUOTES | ENT_HTML5, 'UTF-8');
  $variables['event_category'] = htmlentities($event_category, ENT_QUOTES | ENT_HTML5, 'UTF-8');
  $variables['event_date'] = htmlentities($event_date, ENT_QUOTES | ENT_HTML5, 'UTF-8');
  $variables['event_target'] = htmlentities($event_target, ENT_QUOTES | ENT_HTML5, 'UTF-8');
  $variables['action'] = htmlentities($action, ENT_QUOTES | ENT_HTML5, 'UTF-8');
  $variables['usfca_search'] = htmlentities($usfca_search, ENT_QUOTES | ENT_HTML5, 'UTF-8');
  $variables['myusf_search'] = htmlentities($myusf_search, ENT_QUOTES | ENT_HTML5, 'UTF-8');
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function myusf_preprocess_block(&$vars) {
  if ($vars['derivative_plugin_id'] == 'search_results') {
    $vars['#cache']['max-age'] = 0;
  }

  if ($vars['derivative_plugin_id'] == 'event_search') {
    $vars['#cache']['max-age'] = 0;
  }

  if ($vars['derivative_plugin_id'] == 'user_block') {
    $vars['#cache']['max-age'] = 0;
  }

  if ($vars['derivative_plugin_id'] == 'user_block_dashboard') {
    $vars['#cache']['max-age'] = 0;
  }


  // Allow blocks to update after editing.
  if ($vars['base_plugin_id'] == 'block_content') {
    $renderer = \Drupal::service('renderer');
    $renderer->addCacheableDependency($vars, $vars['content']['#block_content']);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function myusf_theme_suggestions_page_alter(&$suggestions, $variables, $hook) {
  /**
     * 404 template suggestion.
     */
  if (!is_null(Drupal::requestStack()->getCurrentRequest()->attributes->get('exception'))) {
    $status_code = Drupal::requestStack()->getCurrentRequest()->attributes->get('exception')->getStatusCode();
    switch ($status_code) {
      case 404:{
        $suggestions[] = 'page__' . (string) $status_code;
        break;
}
      default:
        break;
    }
  }
}
