{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}

{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
{% set description = node.body.value %}
{% set title = node.title.value %}
{% set additional_info = node.field_additional_info.value %}
{% set start_date = node.field_start_date.value|date('l, F j')  %}
{% set start_time = node.field_start_date.value|date('g:i A')  %}
{% set end_time = node.field_end_date.value|date('g:i A')  %}
{% set location = node.field_location.value %}
{% set building = node.field_building.value %}
{% set image = file_url(node.field_image.entity.uri.value) %}
{% set image_url = node.field_image_url.uri %}
{% set imageAlt = node.field_image_alt.value %}
{% set f_image_url = node.field_f_image_url.uri %}

{% set gcal_title = node.title.value|replace({"&#039;": "%27",'&quot;': "%22"," ": "+",'&': "%26"}) %}
{% set gcal_desc = node.body.value|replace({"&#039;": "%27",'&quot;': "%22"," ": "+",'&': "%26"}) %}

{% if node.field_additional_info is empty %}
  {% set gcal_addl = "" %}
{% else %}
  {% set gcal_addl = node.field_additional_info.value|replace({"&#039;": "%27",'&quot;': "%22"," ": "+",'&': "%26"}) %}
{% endif %}

{% set gcal_loc = node.field_location.value|replace({"&#039;": "%27",'&quot;': "%22"," ": "+",'&': "%26"}) %}
{% set gcal_bldg = node.field_building.value|replace({"&#039;": "%27",'&quot;': "%22"," ": "+",'&': "%26"}) %}
{% set gcal_sdate = node.field_start_date.value|date('Ymd') %}
{% set gcal_stime =  node.field_start_date.value|date('His') %}
{% set gcal_sdatetime = gcal_sdate ~ "T" ~ gcal_stime %}
{% set gcal_edate = node.field_end_date.value|date('Ymd') %}
{% set gcal_etime = node.field_end_date.value|date('His') %}
{% set gcal_edatetime = gcal_edate ~ "T" ~ gcal_etime %}



{% set gcalstr = "https://calendar.google.com/calendar/render?action=TEMPLATE&text=" ~ gcal_title ~ "&details=" ~ gcal_addl ~ gcal_desc ~ "&location=" ~ gcal_loc ~ " " ~ gcal_bldg ~ "&dates=" ~ gcal_sdatetime ~ "/" ~ gcal_edatetime ~"" %}










  <h1 class="title">{{ title }}</h1>
<article{{ attributes.addClass(classes) }}>
  <p class="event-date"><span class="event-date-day">{{ start_date }}</span> {{ start_time }} - {{ end_time }}</p>
  <p class="event-location">{{ building }} &mdash; {{ location }}</p>
  <div class="event-additional-info">
    {% autoescape false %}
      {# Check if the additional_info contains an empty anchor tag #}
      {% if '></a>' in additional_info %}
        {# Replace empty anchor tags with the same tag containing "RSVP", preserving attributes #}
        {% set additional_info = additional_info|replace({
          '></a>': '>RSVP</a>'
        }) %}
      {% endif %}
      {{ additional_info }}
    {% endautoescape %}
  </div>
  <div{{ content_attributes.addClass('content') }}>
    <div class="event-image">
      {% if node.field_f_image_url.value %}
        <img src="{{ f_image_url }}" class="image" alt="{{ imageAlt }}">
      {% endif %}
    </div>
    <div class="body">
  	 <div class="event-description">
       {% autoescape false %}
          {{ description }}
        {% endautoescape %}
      </div>
    </div>
    <div class="event-calendar-icon">
  	<a class="diamond_link_small" href="{{ gcalstr }}">Add to Google Calendar</a>
    </div>
    


  </div>
</article>
<br clear="all">
<br clear="all">

