{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}

{% if search_content is empty %}
  {% set search_content = "all" %}
  {% set search_content_form = null %}
{% else %}
  {% set search_content = search_content %}
  {% set search_content_form = search_content %}
{% endif %}

{% if event_category is empty %}
  {% set event_category = "all" %}
{% else %}
  {% set event_category = event_category %}
{% endif %}

{% if event_date is empty %}
  {% set event_date = null %}
{% else %}
  {% set event_date = event_date %}
{% endif %}

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
  $( function() {
    $( "#datepicker" ).datepicker({ 
      altField: "#event_date",
      dateFormat: 'yy-mm-dd'})
     .datepicker("setDate", "{{ event_date }}");
 } );
</script>
<style>
.search-form {
  width:210px;
  float:left;
}

.category-form {
  float:left;
}

.button-form {
  width:200px;
  float:left;
}

.search-input {
  width:200px;
}

.date-widget {
  float:left;
   padding: 0 10px 0 10px;
}

.form {
}

div.ui-datepicker, .ui-datepicker td{
 font-size:14px;
}

article {
  border-top:1px solid #eeeeee;
  padding:20px 0 20px 0;

}

img {
  height:60px;
}
</style>

<form action = "{{ url('<current>') }}" method="get">
  <div class="form">
    <div class="search-form">
      <input type="text" name="search_content" value="{{ search_content_form }}" class="search-input">
    </div>
    <div class="category-form">
      <select name="event_category">
        <option value="">Select Category</option>
          {{ drupal_view('event_category_term', 'block_1') }}
      </select>
    </div>
    <div class="date-widget">
      <div id="datepicker" class="datepicker"></div>
        <input type="hidden" id="event_date" name="event_date" value="{{ event_date }}"/>
      </div>
    <div class="button-form">
      <input type="submit" value="Search">
    </div>
  </div>
</form>
<br clear="all">
<a href="{{ url('<current>') }}">Reset Search</a>
<div>
  {{ drupal_view('events_search', 'block_1', search_content, event_category, event_date) }}
</div>