{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}

{%
    set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
]
%}
{% set display_title = node.field_display_title.value %}
{% set sub_title = node.field_sub_title.value %}
{% set body = node.body.value %}
{% set image_url = file_url(node.field_image.entity.uri.value) %}
{% set image_alt = node.field_image.alt %}
{% set cta_url = node.field_call_to_action.uri %}
{% set cta_title = node.field_call_to_action.title %}
{% set callout_style = node.field_callout_style.value %}

<a href="{{ cta_url }}" target="_blank" class="overlay-link {{ callout_style }}">
    <div class="overlay-container">
        {#{{ node.field_image }}#}
        <img src="{{ image_url }}" alt="{{ image_alt }}" class="overlay-image" height="300" width="300" />
        <div class="overlay">
            <h2 class="overlay-heading">
                {% if node.field_sub_title.value %}
                    {{ display_title }}
                {% endif %}
            </h2>
            <div class="rollover-text">
                {% if node.field_sub_title.value %}
                    <p>{{ sub_title }}</p>
                {% endif %}
            </div>
        </div>
    </div>
</a>


        {#<img src="{{ image }}" alt="{{ image_alt }}" />#}
        {#{{ node.field_image|view('grid') }}#}
                {#<p>#}
                    {#<a class="{{ callout_style }}" href="{{ cta_url }}">{{ cta_title }}</a>#}
                {#</p>#}
        {#{% autoescape false %}#}
            {#{{ body }}#}
        {#{% endautoescape %}#}










<style>
    <!--/*--><![CDATA[/* ><!--*/
.overlay-link {
    display: block;
    padding:10px;
}
    .overlay-container {
        position: relative;
    }

    .overlay-image {
        display: block;
        height: auto;
        width:100%;
        margin:0;
    }

    .overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: #00543C;
        background: -moz-linear-gradient(top, #00543C 0, #196F3D 100%);
        background: -webkit-gradient(left top, left bottom, color-stop(0, #00543C), color-stop(100%, #196F3D));
        background: -webkit-linear-gradient(top, #00543C 0, #196F3D 100%);
        background: -o-linear-gradient(top, #00543C 0, #196F3D 100%);
        background: -ms-linear-gradient(top, #00543C 0, #196F3D 100%);
        background: linear-gradient(to bottom, #00543C 0, #196F3D 100%);
        opacity: .9;
        overflow: hidden;
        width:100%;
        height: 30px;
        transition: .5s ease;
    }

    .overlay-container:hover .overlay {
        height: 100%;
    }

    .rollover-text {
        color: #FFF !important;
        margin: 40px 0 0 0;
        font-size: 15px;
        position: absolute;
        top: 50%;
        left: 50%;
        -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
        text-align: center;
    }
    .overlay-heading {
        font-size: 16px;
        color: #FFF !important;
        text-align: center;
        width: 100%;
        position: absolute;
        -webkit-transform: translate(0, -50%);
        -ms-transform: translate(0, -50%);
        -o-transform: translate(0, -50%);
        transform: translate(0, -50%);
        top: 50%;
        margin: 0 !important;
        padding: 10px;
        opacity: 1;
        filter: alpha(opacity=100);
        -webkit-transition: opacity .4s ease;
        -o-transition: opacity .4s ease;
        transition: opacity .4s ease;
        display: block;
        margin-block-start: 1.33em;
        margin-block-end: 1.33em;
        margin-inline-start: 0px;
        margin-inline-end: 0px;
    }
    </style>